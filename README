ONScripter-insani

0. INTRODUCTION AND HISTORY

ONScripter-insani is a branch of ONScripter, which is an active
project as of 2022 (https://onscripter.osdn.jp/onscripter.html).
ONScripter is a clean-room open-source implementation of
NScripter -- a novel game creation engine that arguably helped
to bootstrap the novel game boom in Japan.  Many companies used
NScripter in order to create some of the classics of the genre,
notable examples being "Mizuiro" by Nekonekosoft and "Tsukihime"
by TYPE-MOON.

In 2005, a programmer named chendo contributed some patches back
to ONScripter which, for the first time, allowed for one-byte
characters to be used directly in ONScripter.  We at insani.org
took on maintenance of a separate branch of ONScripter for the
purposes of novel game localization.  This branch eventually
became a full-on fork called ONScripter-EN (ons-en), which was
maintained by Haeleth and Uncle Mion.  The last commits to this
fork date back to 2011, and the project has not been actively
maintained ever since.

As of 2023, the current existing binaries for ONScripter-EN have
the following characteristics:

- They no longer function in modern macOS, likely related to
  security changes brought about in Ventura and beyond
- Many sound files do not play at all

Furthermore, the source trees for ONScripter-EN and ONScripter
are now very different -- which is to be expected when there is
a 12 year gap between the two projects.  Over the course of
these 12 years, ONScripter has ported in many of the enhancements
that were in ONScripter-EN, and has had at least one complete
reorganization of its files and filenames.  This means that
direct comparisons between the code of ONScripter-EN and
ONScripter are now very difficult.

As a result, we have chosen to re-activate our ONScripter-insani
branch.  Our goals in this branch are as follows:

- Stay as close to upstream ONScripter as possible
- Write in functionality that truly allows legacy English mode
  (one-byte, monospaced, using `) to work
- Provide builds for modern architectures, most notably for Apple
  Silicon macOS
  
1. REQUIRED AND RECOMMENDED LIBRARIES/UTILITIES

For macOS, our build system assumes that you are using
homebrew.

Required Libraries
------------------
- libjpeg
- bzip2
- SDL-2.0
- SDL-1.2-compat
- SDL_image
- SDL_mixer
- SDL_ttf

Recommended Libraries
---------------------
- SMPEG
- libogg
- libvorbis

Utilities (macOS)
-----------------
- dylibbundler
- GNU make

2. COMPILATION INSTRUCTIONS

macOS
-----
gmake -f Makefile.MacOSX.insani

If you wish to make a game-specific app bundle, you can do so by
running ./makedist.MacOSX.sh -- however, if you wish to actually
distribute your builds, you are going to need an Apple developer
account and you will have to fork over $99 a year.

Windows
-------
TBD

3. CONTACTS

The original creator of ONScripter is Ogapee.

- https://onscripter.osdn.jp/onscripter.html
- ogapee@aqua.dti2.ne.jp

Please refrain from contacting Ogapee about anything you find in
ONScripter-insani, though, as this branch does have differences
from mainline ONScripter.  Contact us through Github instead:

- http://nscripter.insani.org/
- https://github.com/insani-org/onscripter-insani/

4. CHANGELOG

20230308
--------
- ONScripter upstream version: 20220816
- Added legacy_english_mode flag
- Enter legacy_english_mode if ` is detected
- Created line-break system for legacy_english_mode
- Fixed a bug in which lines that begin with ` cannot be
  advanced from in any circumstance
- Minor tweaks to allow for usage of SDL2 + SDL12-compat
- APPBUNDLE build flag which by default allows for saving of
  .sav and envdata files in ~/Documents/ONScripter/<game name>
  instead of in the same directory, and to allow for game
  asset detection within the app bundle itself
- Modified makefiles for macOS and Windows
- Created macOS app bundle creation script

All Previous Versions
---------------------
- http://nscripter.insani.org/changelog.html
